"""...

Revision ID: 857af7ff284b
Revises: 6bd15f58d2b7
Create Date: 2025-10-18 15:35:35.087257

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '857af7ff284b'
down_revision: Union[str, Sequence[str], None] = '6bd15f58d2b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('transactions', 'id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='ID único da transação',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('transactions', 'wallet_id',
               existing_type=mysql.INTEGER(),
               nullable=True,
               comment=None,
               existing_comment='ID da carteira relacionada')
    op.alter_column('transactions', 'type_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='ID do tipo de transação',
               existing_nullable=False)
    op.alter_column('transactions', 'account_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='ID da conta bancária associada',
               existing_nullable=False)
    op.alter_column('transactions', 'payment_method',
               existing_type=mysql.ENUM('pix', 'boleto', 'bolepix', 'card'),
               comment=None,
               existing_comment='Método de pagamento: pix, boleto, bolepix, card',
               existing_nullable=False)
    op.alter_column('transactions', 'txid',
               existing_type=mysql.VARCHAR(length=128),
               comment=None,
               existing_comment='Identificador único da transação (TxID)',
               existing_nullable=True)
    op.alter_column('transactions', 'end_to_end_id',
               existing_type=mysql.VARCHAR(length=128),
               comment=None,
               existing_comment='End-to-End ID para rastreamento do pagamento',
               existing_nullable=True)
    op.alter_column('transactions', 'amount',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Valor da transação',
               existing_nullable=False)
    op.alter_column('transactions', 'balance',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Saldo após a transação (impacto na carteira/conta)',
               existing_nullable=True)
    op.alter_column('transactions', 'description',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Descrição da transação',
               existing_nullable=True)
    op.alter_column('transactions', 'status',
               existing_type=mysql.ENUM('pending', 'completed', 'failed'),
               comment=None,
               existing_comment='Status da transação: pending, completed, failed',
               existing_nullable=True)
    op.alter_column('transactions', 'payer',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='Dados do pagador (nome, documento, banco, agência, conta, tipo de conta, ISPB)',
               existing_nullable=True)
    op.alter_column('transactions', 'receiver',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='Dados do recebedor (nome, documento, banco, agência, conta, tipo de conta, ISPB)',
               existing_nullable=True)
    op.alter_column('transactions', 'payment_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='Data de pagamento efetiva da transação',
               existing_nullable=True)
    op.alter_column('transactions', 'created_at',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='Data de criação do registro',
               existing_nullable=True)
    op.alter_column('transactions', 'event_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='Data do evento associado à transação',
               existing_nullable=True)
    op.alter_column('transactions', 'details',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='Dados adicionais específicos do método de pagamento (ex: QR code Pix, linha digitável Boleto, parcelas Cartão)',
               existing_nullable=True)
    op.alter_column('wallets', 'id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='ID interno da carteira',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('wallets', 'external_id',
               existing_type=mysql.VARCHAR(length=36),
               comment=None,
               existing_comment='Identificador externo único (UUID)',
               existing_nullable=True)
    op.alter_column('wallets', 'name',
               existing_type=mysql.VARCHAR(length=120),
               comment=None,
               existing_comment='Nome da carteira (ex: Carteira Principal)',
               existing_nullable=False)
    op.alter_column('wallets', 'holder_name',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Nome do titular da conta',
               existing_nullable=False)
    op.alter_column('wallets', 'document',
               existing_type=mysql.VARCHAR(length=20),
               comment=None,
               existing_comment='Documento do titular (CPF, CNPJ ou passaporte)',
               existing_nullable=False)
    op.alter_column('wallets', 'status',
               existing_type=mysql.VARCHAR(length=20),
               comment=None,
               existing_comment='Status da conta (ativo/inativo)',
               existing_nullable=False)
    op.alter_column('wallets', 'fee_pix_in',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por transação Pix de entrada',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_pix_out',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por transação Pix de saída',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_boleto',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por emissão de boleto',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_bolepix',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por transação BolePix',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_credit_card',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por transação via cartão de crédito',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_debit_card',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Taxa cobrada por transação via cartão de débito',
               existing_nullable=True)
    op.alter_column('wallets', 'balance',
               existing_type=mysql.FLOAT(),
               comment=None,
               existing_comment='Saldo atual da carteira',
               existing_nullable=True)
    op.alter_column('wallets', 'currency',
               existing_type=mysql.VARCHAR(length=10),
               comment=None,
               existing_comment='Moeda associada à carteira',
               existing_nullable=True)
    op.alter_column('wallets', 'bank_account_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='ID da conta bancária associada',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('wallets', 'bank_account_id',
               existing_type=mysql.INTEGER(),
               comment='ID da conta bancária associada',
               existing_nullable=True)
    op.alter_column('wallets', 'currency',
               existing_type=mysql.VARCHAR(length=10),
               comment='Moeda associada à carteira',
               existing_nullable=True)
    op.alter_column('wallets', 'balance',
               existing_type=mysql.FLOAT(),
               comment='Saldo atual da carteira',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_debit_card',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por transação via cartão de débito',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_credit_card',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por transação via cartão de crédito',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_bolepix',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por transação BolePix',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_boleto',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por emissão de boleto',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_pix_out',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por transação Pix de saída',
               existing_nullable=True)
    op.alter_column('wallets', 'fee_pix_in',
               existing_type=mysql.FLOAT(),
               comment='Taxa cobrada por transação Pix de entrada',
               existing_nullable=True)
    op.alter_column('wallets', 'status',
               existing_type=mysql.VARCHAR(length=20),
               comment='Status da conta (ativo/inativo)',
               existing_nullable=False)
    op.alter_column('wallets', 'document',
               existing_type=mysql.VARCHAR(length=20),
               comment='Documento do titular (CPF, CNPJ ou passaporte)',
               existing_nullable=False)
    op.alter_column('wallets', 'holder_name',
               existing_type=mysql.VARCHAR(length=255),
               comment='Nome do titular da conta',
               existing_nullable=False)
    op.alter_column('wallets', 'name',
               existing_type=mysql.VARCHAR(length=120),
               comment='Nome da carteira (ex: Carteira Principal)',
               existing_nullable=False)
    op.alter_column('wallets', 'external_id',
               existing_type=mysql.VARCHAR(length=36),
               comment='Identificador externo único (UUID)',
               existing_nullable=True)
    op.alter_column('wallets', 'id',
               existing_type=mysql.INTEGER(),
               comment='ID interno da carteira',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('transactions', 'details',
               existing_type=mysql.JSON(),
               comment='Dados adicionais específicos do método de pagamento (ex: QR code Pix, linha digitável Boleto, parcelas Cartão)',
               existing_nullable=True)
    op.alter_column('transactions', 'event_date',
               existing_type=mysql.DATETIME(),
               comment='Data do evento associado à transação',
               existing_nullable=True)
    op.alter_column('transactions', 'created_at',
               existing_type=mysql.DATETIME(),
               comment='Data de criação do registro',
               existing_nullable=True)
    op.alter_column('transactions', 'payment_date',
               existing_type=mysql.DATETIME(),
               comment='Data de pagamento efetiva da transação',
               existing_nullable=True)
    op.alter_column('transactions', 'receiver',
               existing_type=mysql.JSON(),
               comment='Dados do recebedor (nome, documento, banco, agência, conta, tipo de conta, ISPB)',
               existing_nullable=True)
    op.alter_column('transactions', 'payer',
               existing_type=mysql.JSON(),
               comment='Dados do pagador (nome, documento, banco, agência, conta, tipo de conta, ISPB)',
               existing_nullable=True)
    op.alter_column('transactions', 'status',
               existing_type=mysql.ENUM('pending', 'completed', 'failed'),
               comment='Status da transação: pending, completed, failed',
               existing_nullable=True)
    op.alter_column('transactions', 'description',
               existing_type=mysql.VARCHAR(length=255),
               comment='Descrição da transação',
               existing_nullable=True)
    op.alter_column('transactions', 'balance',
               existing_type=mysql.FLOAT(),
               comment='Saldo após a transação (impacto na carteira/conta)',
               existing_nullable=True)
    op.alter_column('transactions', 'amount',
               existing_type=mysql.FLOAT(),
               comment='Valor da transação',
               existing_nullable=False)
    op.alter_column('transactions', 'end_to_end_id',
               existing_type=mysql.VARCHAR(length=128),
               comment='End-to-End ID para rastreamento do pagamento',
               existing_nullable=True)
    op.alter_column('transactions', 'txid',
               existing_type=mysql.VARCHAR(length=128),
               comment='Identificador único da transação (TxID)',
               existing_nullable=True)
    op.alter_column('transactions', 'payment_method',
               existing_type=mysql.ENUM('pix', 'boleto', 'bolepix', 'card'),
               comment='Método de pagamento: pix, boleto, bolepix, card',
               existing_nullable=False)
    op.alter_column('transactions', 'account_id',
               existing_type=mysql.INTEGER(),
               comment='ID da conta bancária associada',
               existing_nullable=False)
    op.alter_column('transactions', 'type_id',
               existing_type=mysql.INTEGER(),
               comment='ID do tipo de transação',
               existing_nullable=False)
    op.alter_column('transactions', 'wallet_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='ID da carteira relacionada')
    op.alter_column('transactions', 'id',
               existing_type=mysql.INTEGER(),
               comment='ID único da transação',
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
